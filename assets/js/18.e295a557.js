(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{208:function(t,e,a){"use strict";a.r(e);var s=a(0),l=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("h3",{attrs:{id:"git教程七：fetch和pull"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git教程七：fetch和pull","aria-hidden":"true"}},[t._v("#")]),t._v(" git教程七：fetch和pull")]),a("h4",{attrs:{id:"fecth"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fecth","aria-hidden":"true"}},[t._v("#")]),t._v(" fecth")]),a("p",[t._v("拉取远程仓库最新代码到版本库，不会影响本地代码，本地代码还是原来的代码：")]),a("div",{staticClass:"language-Shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("  $ git fetch [<options>] <group>\n  $ git fetch --multiple [<options>] [(<repository> | <group>)​]\n  $ git fetch --all [<options>]\n  $ git fetch <远程主机名> <分支名>\n")])])]),a("p",[t._v("默认取回所有分支的更新")]),a("p",[t._v("然后与本地对应的分支合并：")]),a("div",{staticClass:"language-Shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git rebase origin/master\n$ 或者\n$ git merge origin/master\n")])])]),a("h4",{attrs:{id:"pull"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pull","aria-hidden":"true"}},[t._v("#")]),t._v(" pull")]),a("p",[t._v("拉取远程某个分支仓库代码到本地\n会和本地分支代码合并")]),a("p",[t._v("相当于 git fecth 和 git rebase 的结果")]),a("div",{staticClass:"language-Shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git pull <远程主机名> <远程分支名>:<本地分支名>\n")])])]),a("p",[t._v("如果当前分支与远程分支存在追踪关系，git pull就可以省略远程分支名\n如果合并需要采用rebase模式，可以使用--rebase选项。")]),a("div",{staticClass:"language-Shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git pull --rebase <远程主机名> <远程分支名>:<本地分支名>\n$ 简写为\n$ git pull -r\n")])])]),a("p",[t._v("远程主机名为origin")])])}],!1,null,null,null);e.default=l.exports}}]);